//! # 内存分配算法
//!
//! ```text
//!           +-----------------+                        +-----------------+
//!         8 |                 |                        |                 |
//!           +-----------------+                        +-----------------+
//!           |=================|                        |=================|
//!           |=================|                        |=================|
//!           |=================|                        |=================|
//!           +-----------------+                        +-----------------+
//!        22 |                 |            First Fit   |*****************|
//!           |                 |                |       |*****************|
//!           |                 |                +----+> |*****************|
//!           |                 |                        +-----------------+
//!           |                 |                      6 |                 |
//!           |                 |                        |                 |
//!           +=================+                        +=================+
//!           |                 |                        +-----------------+
//!        20 |                 |            Best Fit    |*****************|
//!           |                 |               |        |*****************|
//!           |                 |               +-----+> |*****************|
//!           +-----------------+                        +-----------------+
//!           |                 |                      4 |                 |
//!           +-----------------+ ********************** +-----------------+
//!           |=================| * | |: Free          * |=================|
//!           |=================| * |=|: Allocated     * |=================|
//!           |=================| * |*|: New Allocated * |=================|
//!           |=================| ********************** |=================|
//!           |=================|                        |=================|
//!           |=================|                        |=================|
//!           |=================|                        |=================|
//!           |=================|                        |=================|
//!           |=================|                        |=================|
//!           +-----------------+                        +-----------------+
//!        14 |                 |                     14 |                .|
//!           |                 |                        |                 |
//!           |                 |                        |                 |
//!           +-----------------+                        +-----------------+
//!           |=================|                        |=================|
//!           |=================|                        |=================|
//!   Last    +-----------------+                        +-----------------+
//! Allocated |=================|                        |=================|
//!     |     |=================|                        |=================|
//!     +--+> |=================|                        |=================|
//!           +-----------------+                        +-----------------+
//!           |                 |                        |                 |
//!        10 |                 |                     10 |                 |
//!           +-----------------+                        +-----------------+
//!           |=================|                        |=================|
//!           |=================|                        |=================|
//!           |=================|                        |=================|
//!           |=================|                        |=================|
//!           +-----------------+                        +-----------------+
//!           |                .|            Next Fit    |*****************|
//!           |                 |               |        |*****************|
//!        24 |                 |               +-----+> |*****************|
//!           |                 |                        +-----------------+
//!           |                 |                      8 |                 |
//!           +-----------------+                        +-----------------+
//!            Before Allocation                           After Allocation
//! ```
//! *this image from [here](https://media.geeksforgeeks.org/wp-content/uploads/next-fit-algorithm-operating-system.png)*
//!
//! ## 实现标准
//!
//! 每个模块必须实现一个分配函数，一个释放函数，定义如下
//!
//! ### 分配函数
//!
//! 该函数负责计算内存分配的位置，**不**修改实际内存。输入内存表与需要分配的内存块。输出内存分配的起始地址。
//! ```rust
//! use memory_alloc::algorithm::typedef::{Memory,Address,MemoryTable};
//! fn calc_alloc_pos(memory_table: MemoryTable, memory: Memory) -> Address {return 0;};
//! ```
//!
//! ### 释放函数
//!
//! 该函数负责计算应释放哪块内存，**不**修改实际内存。输入内存表。输出释放内存的起始地址。
//! ```rust
//! use memory_alloc::algorithm::typedef::{Memory,Address,MemoryTable};
//! fn calc_dealloc_pos(memory_table: MemoryTable) -> Address {return 0};
//! ```
//!
//! ### 内存块
//!
//! 内存块包含三部分，内存id，内存大小，内存区段（起始和终止）。
//!
//! 需要注意的是，内存大小不一定等于内存区段的 终止 - 起始
//!
//! ### 内存表
//!
//! 内存表是一个内存块 `LinkList` 。
//!

pub mod ff;
pub mod bf;
pub mod nf;
pub mod typedef;
